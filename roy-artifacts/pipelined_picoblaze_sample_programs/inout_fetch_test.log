KCPSM3 Assembler log file for program 'inout_fetch_test.psm'.
Generated by KCPSM3 version v2.00
Ken Chapman - Xilinx Ltd - 17th January 2011

Assembly datestamp: 20 Nov 2020
Assembly timestamp: 16:56:09

Last occupied address: 022 hex


 Addr Code            Instruction

 000                  ;--------------------------------------------------------
 000                  ; inout_fetch_test.psm - short program to test valid INPUT, OUTPUT, and FETCH operations
 000                  ;
 000                  ; Author: Seth Rohrbach
 000                  ; Modified: March 17, 2020
 000                  ;
 000                  ; Description:
 000                  ; This short program will test a limited set of INPUT, OUTPUT, and FETCH operations. We are using 1 hot encoding and only checking 4 ports
 000                  ; because it looks like there are substantial timing issues with INPUT and OUTPUT ops in the RojoBlaze.
 000                  ;
 000                  ;-------------------------------------------------------
 000                  ;
 000                  ;====================
 000                  ;== Register Names ==
 000                  ;====================
 000                  NAMEREG s2, op1
 000                  NAMEREG s3, op2
 000                  NAMEREG s4, res
 000                  NAMEREG s5, dest
 000                  NAMEREG s6, counter
 000                  NAMEREG s7, transf
 000                  ;
 000                  ;
 000                  ;
 000                  ;==============
 000                  ;=== main() ===
 000                  ;==============
 000                  ADDRESS 000
 000                  ;
 000            main: 
 000  00200           LOAD s2[op1], 00
 001  00500           LOAD s5[dest], 00            ;point to base of the scratchpad
 002  01AA0           LOAD sA, sA
 003                  ;    INPUT res, 01       ;Read from input port 01
 003  01AA0           LOAD sA, sA                  ;NOP
 004                  ;    STORE res, (dest)
 004                  ;    ADD dest, 01
 004                  ;    LOAD sA, sA
 004                  ;    INPUT res, 02       ;Read from input port 02
 004                  ;    LOAD sA, sA         ;NOP
 004                  ;    STORE res, (dest)   ;
 004                  ;    ADD dest, 01
 004  04404           INPUT s4[res], 04            ;Read from input port 04
 005  01AA0           LOAD sA, sA                  ;NOP
 006  2F450           STORE s4[res], (s5[dest])
 007  18501           ADD s5[dest], 01
 008  04408           INPUT s4[res], 08            ;Read from input port 08
 009  01AA0           LOAD sA, sA                  ;NOP
 00A  2F450           STORE s4[res], (s5[dest])
 00B  00500           LOAD s5[dest], 00            ;Reset back to base scratchpad addr
 00C  07750           FETCH s7[transf], (s5[dest])
 00D  18501           ADD s5[dest], 01
 00E  2C701           OUTPUT s7[transf], 01        ;WRITE to OUTPUT port 01
 00F  01AA0           LOAD sA, sA                  ;NOP
 010  07750           FETCH s7[transf], (s5[dest])
 011  18501           ADD s5[dest], 01
 012  2C702           OUTPUT s7[transf], 02        ;WRITE to OUTPUT port 02
 013  01AA0           LOAD sA, sA                  ;NOP
 014  07750           FETCH s7[transf], (s5[dest])
 015  18501           ADD s5[dest], 01
 016  2C704           OUTPUT s7[transf], 04        ;WRITE to OUTPUT port 04
 017  01AA0           LOAD sA, sA                  ;NOP
 018  07750           FETCH s7[transf], (s5[dest])
 019  18501           ADD s5[dest], 01
 01A  2C708           OUTPUT s7[transf], 08        ;WRITE to OUTPUT port 08
 01B  01AA0           LOAD sA, sA                  ;NOP
 01C  00DF0           LOAD sD, F0
 01D  2ED3F           STORE sD, 3F                 ;WRITE to last RAM location so TB knows we are finished.
 01E         endloop: ;Lets the pipeline finish
 01E  01AA0           LOAD sA, sA                  ;NOP
 01F  3401E           JUMP 01E[endloop]
 020  01AA0           LOAD sA, sA                  ;NOP
 021  01AA0           LOAD sA, sA                  ;NOP
 022  00B44           LOAD sB, 44                  ;ERROR



List of defined constants

timestamp_hours = 16'd
timestamp_minutes = 56'd
timestamp_seconds = 09'd
datestamp_year = 20'd
datestamp_month = 11'd
datestamp_day = 20'd



List of text strings

KCPSM3_version$ = "v2.00"
datestamp$ = "20 Nov 2020"
timestamp$ = "16:56:09"



End of KCPSM3 log file.
